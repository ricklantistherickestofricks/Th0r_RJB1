//
//  exploit.h
//  sock_port
//
//  Created by Jake James on 7/17/19.
//  Copyright Â© 2019 Jake James. All rights reserved.
//

#ifndef exploitSP_h
#define exploitSP_h


#include <stdio.h>
#include <unistd.h>
#include <errno.h>
#include <netinet/in.h>
#include <mach/mach.h>
#include <sys/mman.h>
#include "SockPuppetStructures.h"

#include "exploit_utilities.h"
#include "kernel_memorySP.h"
//#include "offsetsSP.h"

#define IPV6_USE_MIN_MTU 42
#define IPV6_PKTINFO 46
#define IPV6_PREFER_TEMPADDR 63

extern uint64_t self_port_addr_SP;
extern mach_port_t newClientSP;
extern uint64_t task_addr_SP;
extern uint64_t itk_space_SP;
extern uint64_t is_table_SP;
extern uint64_t newIOSURFACEROOTUSERCLIENT_port_SP;
extern uint64_t exported_itk_space_SP;
extern uint64_t current_task_SP;
extern uint64_t newkern_ucred_SP;
extern uint64_t newself_ucred_SP;
extern uint64_t SP_task_ipc_spaceKERNEL_SP;
extern uint64_t SP_Sourproc;
extern uint64_t new_SP_task_port_kaddr;
extern uint64_t SP_task_port_kaddr;
extern uint64_t kernprocFinal;
extern uint64_t ourprocFinal;
extern uint64_t kernel_slide_EXPORTED_SP;
extern uint64_t kernel_base_EXPORTED_SP;

extern uint64_t task_port_kaddr_OFF_SP;
extern mach_port_t tfp0;
extern mach_port_t tVfp0;
extern mach_port_t SPtfp0;
extern mach_port_t user_clientnew_SP;

extern mach_port_t tipizer0;

extern uint64_t kernel_task_newadd_SP;

extern uint64_t v3task_port_kaddr_SP;

extern uint64_t my_SP_ipcSpaceKernel;


/*
struct route_in6 {
    struct rtentry *ro_rt;
    struct llentry *ro_lle;
    struct ifaddr *ro_srcia;
    uint32_t ro_flags;
    struct sockaddr_in6 ro_dst;
};

struct ip6po_rhinfo {
    struct ip6_rthdr *ip6po_rhi_rthdr;
    struct route_in6 ip6po_rhi_route;
};

struct ip6po_nhinfo {
    struct sockaddr *ip6po_nhi_nexthop;
    struct route_in6 ip6po_nhi_route;
};

struct ip6_pktopts {
    struct mbuf *ip6po_m;
    int ip6po_hlim;
    struct in6_pktinfo *ip6po_pktinfo;
    struct ip6po_nhinfo ip6po_nhinfo;
    struct ip6_hbh *ip6po_hbh;
    struct ip6_dest *ip6po_dest1;
    struct ip6po_rhinfo ip6po_rhinfo;
    struct ip6_dest *ip6po_dest2;
    int ip6po_tclass;
    int ip6po_minmtu;
    int ip6po_prefer_tempaddr;
    int ip6po_flags;
};
*/

#define IO_BITS_ACTIVE      0x80000000
#define IOT_PORT            0
#define IKOT_TASK           2
#define IKOT_CLOCK          25
#define IKOT_IOKIT_CONNECT  29


mach_port_t get_tfp0(void);

#endif /* exploit_h */
