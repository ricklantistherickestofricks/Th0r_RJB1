#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

#import <stdio.h>
#import <stdlib.h>
#import <string.h>
#import <sys/sysctl.h>
#import <sys/utsname.h>

#include "offsetsSP.h"

#define SYSTEM_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)

int* offsetsSP = NULL;

int kstruct_offsetsSP_10_x[] = {
    0xb,   // KSTRUCT_OFFSET_TASK_LCK_MTX_TYPE,
    0x10,  // KSTRUCT_OFFSET_TASK_REF_COUNT,
    0x14,  // KSTRUCT_OFFSET_TASK_ACTIVE,
    0x20,  // KSTRUCT_OFFSET_TASK_VM_MAP,
    0x28,  // KSTRUCT_OFFSET_TASK_NEXT,
    0x30,  // KSTRUCT_OFFSET_TASK_PREV,
    0xd8,  // KSTRUCT_OFFSET_TASK_ITK_SELF,
    0x300, // KSTRUCT_OFFSET_TASK_ITK_SPACE,
    0x360, // KSTRUCT_OFFSET_TASK_BSD_INFO,
    
    0x0,   // KSTRUCT_OFFSET_IPC_PORT_IO_BITS,
    0x4,   // KSTRUCT_OFFSET_IPC_PORT_IO_REFERENCES,
    0x40,  // KSTRUCT_OFFSET_IPC_PORT_IKMQ_BASE,
    0x50,  // KSTRUCT_OFFSET_IPC_PORT_MSG_COUNT,
    0x60,  // KSTRUCT_OFFSET_IPC_PORT_IP_RECEIVER,
    0x68,  // KSTRUCT_OFFSET_IPC_PORT_IP_KOBJECT,
    0x88,  // KSTRUCT_OFFSET_IPC_PORT_IP_PREMSG,
    0x90,  // KSTRUCT_OFFSET_IPC_PORT_IP_CONTEXT,
    0xa0,  // KSTRUCT_OFFSET_IPC_PORT_IP_SRIGHTS,
    
    0x10,  // KSTRUCT_OFFSET_PROC_PID,
    0x108, // KSTRUCT_OFFSET_PROC_P_FD
    
    0x0,   // KSTRUCT_OFFSET_FILEDESC_FD_OFILES
    
    0x8,   // KSTRUCT_OFFSET_FILEPROC_F_FGLOB
    
    0x38,  // KSTRUCT_OFFSET_FILEGLOB_FG_DATA
    
    0x10,  // KSTRUCT_OFFSET_SOCKET_SO_PCB
    
    0x10,  // KSTRUCT_OFFSET_PIPE_BUFFER
    
    0x14,  // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_SIZE
    0x20,  // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE
    
    0x6c,  // KFREE_ADDR_OFFSET
};

int kstruct_offsetsSP_11_0[] = {
     0xb,   // KSTRUCT_OFFSET_TASK_LCK_MTX_TYPE,
     0x10,  // KSTRUCT_OFFSET_TASK_REF_COUNT,
     0x14,  // KSTRUCT_OFFSET_TASK_ACTIVE,
     0x20,  // KSTRUCT_OFFSET_TASK_VM_MAP,
     0x28,  // KSTRUCT_OFFSET_TASK_NEXT,
     0x30,  // KSTRUCT_OFFSET_TASK_PREV,
     0xd8,  // KSTRUCT_OFFSET_TASK_ITK_SELF,
     0x300, // KSTRUCT_OFFSET_TASK_ITK_SPACE,
     0x368, // KSTRUCT_OFFSET_TASK_BSD_INFO,
     0x398, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_ADDR
     0x3a0, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_SIZE
     0x390, // KSTRUCT_OFFSET_TASK_TFLAGS
     0x2f0, // SPKSTRUCT_OFFSET_TASK_ITK_REGISTERED
     
     0,   // KSTRUCT_OFFSET_IPC_PORT_IO_BITS,
     4,   // KSTRUCT_OFFSET_IPC_PORT_IO_REFERENCES,
     0x40,  // KSTRUCT_OFFSET_IPC_PORT_IKMQ_BASE,
     80, // KSTRUCT_OFFSET_IPC_PORT_MSG_COUNT,
     96, // KSTRUCT_OFFSET_IPC_PORT_IP_RECEIVER,
     104, // KSTRUCT_OFFSET_IPC_PORT_IP_KOBJECT,
     128, // KSTRUCT_OFFSET_IPC_PORT_IP_PREMSG,0x88,
     156, // KSTRUCT_OFFSET_IPC_PORT_IP_CONTEXT,0x90
     160, // KSTRUCT_OFFSET_IPC_PORT_IP_SRIGHTS,
     
     0x60, // KSTRUCT_OFFSET_PROC_PID,
     0xf8, // KSTRUCT_OFFSET_PROC_UCRED
     0x8,  // KSTRUCT_OFFSET_PROC_P_LIST
     0x100,// KSTRUCT_OFFSET_PROC_P_FD
     0x10, // KSTRUCT_OFFSET_PROC_TASK
     0x2a8, //SPKSTRUCT_OFFSET_PROC_CSFLAGS,
     0xA4, // SPKSTRUCT_OFFSET_PROC_CSB_PLATFORM_BINARY,
     0x248, //SPKSTRUCT_OFFSET_PROC_TEXT_VP,

     0x0,  // KSTRUCT_OFFSET_FILEDESC_FD_OFILES
     
     0x8,  // KSTRUCT_OFFSET_FILEPROC_F_FGLOB
     
     0x38, // KSTRUCT_OFFSET_FILEGLOB_FG_DATA
     
     0x10, // KSTRUCT_OFFSET_SOCKET_SO_PCB
     
     0x10, // KSTRUCT_OFFSET_PIPE_BUFFER
     
     0x14, // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_SIZE
     0x20, // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE
     0x18, // KSTRUCT_SIZE_IPC_ENTRY
     0x8, // KSTRUCT_OFFSET_IPC_ENTRY_IE_BITS
     
     0xd8, // KSTRUCT_OFFSET_VNODE_V_MOUNT
     0x78, // KSTRUCT_OFFSET_VNODE_VU_SPECINFO
     0x0,  // KSTRUCT_OFFSET_VNODE_V_LOCK
     0x70, //SPKSTRUCT_OFFSET_VNODE_V_TYPE
     0xe0, // KSTRUCT_OFFSET_VNODE_V_DATA
     0x54, // KSTRUCT_OFFSET_VNODE_V_FLAG
     
     0x10, // KSTRUCT_OFFSET_SPECINFO_SI_FLAGS
     
     0x70, // KSTRUCT_OFFSET_MOUNT_MNT_FLAG
     0x8f8, // KSTRUCT_OFFSET_MOUNT_MNT_DATA
     0x18, // KSTRUCT_OFFSET_MOUNT_MNT_MLOCK

     0xb7, // KSTRUCT_OFFSET_GET_TRAP_FOR_INDEX

     0x10, // KSTRUCT_OFFSET_HOST_SPECIAL
     
     0x7c, // KFREE_ADDR_OFFSET
    /* 0xb,   // KSTRUCT_OFFSET_TASK_LCK_MTX_TYPE,
     0x10,  // KSTRUCT_OFFSET_TASK_REF_COUNT,
     0x14,  // KSTRUCT_OFFSET_TASK_ACTIVE,
     0x20,  // KSTRUCT_OFFSET_TASK_VM_MAP,
     0x28,  // KSTRUCT_OFFSET_TASK_NEXT,
     0x30,  // KSTRUCT_OFFSET_TASK_PREV,
     0xd8,  // KSTRUCT_OFFSET_TASK_ITK_SELF,
     0x308, // KSTRUCT_OFFSET_TASK_ITK_SPACE,
     0x368, // KSTRUCT_OFFSET_TASK_BSD_INFO,
     0x3a8, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_ADDR
     0x3b0, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_SIZE
     0x3a0, // KSTRUCT_OFFSET_TASK_TFLAGS
     
     0x0,   // KSTRUCT_OFFSET_IPC_PORT_IO_BITS,
     0x4,   // KSTRUCT_OFFSET_IPC_PORT_IO_REFERENCES,
     0x40,  // KSTRUCT_OFFSET_IPC_PORT_IKMQ_BASE,
     0x50,  // KSTRUCT_OFFSET_IPC_PORT_MSG_COUNT,
     0x60,  // KSTRUCT_OFFSET_IPC_PORT_IP_RECEIVER,
     0x68,  // KSTRUCT_OFFSET_IPC_PORT_IP_KOBJECT,
     0x88,  // KSTRUCT_OFFSET_IPC_PORT_IP_PREMSG,
     0x90,  // KSTRUCT_OFFSET_IPC_PORT_IP_CONTEXT,
     0xa0,  // KSTRUCT_OFFSET_IPC_PORT_IP_SRIGHTS,
     
     0x10,  // KSTRUCT_OFFSET_PROC_PID,
     0x100, // KSTRUCT_OFFSET_PROC_UCRED
     0x8, // KSTRUCT_OFFSET_PROC_P_LIST
     0x108, // KSTRUCT_OFFSET_PROC_P_FD
     0x10, // KSTRUCT_OFFSET_PROC_TASK
     
     0x0,   // KSTRUCT_OFFSET_FILEDESC_FD_OFILES
     
     0x8,   // KSTRUCT_OFFSET_FILEPROC_F_FGLOB
     
     0x38,  // KSTRUCT_OFFSET_FILEGLOB_FG_DATA
     
     0x10,  // KSTRUCT_OFFSET_SOCKET_SO_PCB
     
     0x10,  // KSTRUCT_OFFSET_PIPE_BUFFER
     
     0x14,  // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_SIZE
     0x20,  // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE
     
     0xd8, // KSTRUCT_OFFSET_VNODE_V_MOUNT
     0x78, // KSTRUCT_OFFSET_VNODE_VU_SPECINFO
     0x0, // KSTRUCT_OFFSET_VNODE_V_LOCK
     
     0x10, // KSTRUCT_OFFSET_SPECINFO_SI_FLAGS
     
     0x70, // KSTRUCT_OFFSET_MOUNT_MNT_FLAG
     
     0x10, // KSTRUCT_OFFSET_HOST_SPECIAL
     0x6c,  // KFREE_ADDR_OFFSET*/
     
};

int kstruct_offsetsSP_11_3[] = {
    0xb,   // KSTRUCT_OFFSET_TASK_LCK_MTX_TYPE,
    0x10,  // KSTRUCT_OFFSET_TASK_REF_COUNT,
    0x14,  // KSTRUCT_OFFSET_TASK_ACTIVE,
    0x20,  // KSTRUCT_OFFSET_TASK_VM_MAP,
    0x28,  // KSTRUCT_OFFSET_TASK_NEXT,
    0x30,  // KSTRUCT_OFFSET_TASK_PREV,
    0xd8,  // KSTRUCT_OFFSET_TASK_ITK_SELF,
    0x308, // KSTRUCT_OFFSET_TASK_ITK_SPACE,
    0x368, // KSTRUCT_OFFSET_TASK_BSD_INFO,
    0x398, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_ADDR
    0x3a0, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_SIZE
    0x390, // KSTRUCT_OFFSET_TASK_TFLAGS
    0x2f0, // SPKSTRUCT_OFFSET_TASK_ITK_REGISTERED
    
    0x0,   // KSTRUCT_OFFSET_IPC_PORT_IO_BITS,
    0x4,   // KSTRUCT_OFFSET_IPC_PORT_IO_REFERENCES,
    0x40,  // KSTRUCT_OFFSET_IPC_PORT_IKMQ_BASE,
    0x50,  // KSTRUCT_OFFSET_IPC_PORT_MSG_COUNT,
    0x60,  // KSTRUCT_OFFSET_IPC_PORT_IP_RECEIVER,
    0x68,  // KSTRUCT_OFFSET_IPC_PORT_IP_KOBJECT,
    0x88,  // KSTRUCT_OFFSET_IPC_PORT_IP_PREMSG,
    0x90,  // KSTRUCT_OFFSET_IPC_PORT_IP_CONTEXT,
    0xa0,  // KSTRUCT_OFFSET_IPC_PORT_IP_SRIGHTS,
    
    0x10,  // KSTRUCT_OFFSET_PROC_PID,
    0x100, // KSTRUCT_OFFSET_PROC_UCRED
    0x8, // KSTRUCT_OFFSET_PROC_P_LIST
    0x108, // KSTRUCT_OFFSET_PROC_P_FD
    0x18, // KSTRUCT_OFFSET_PROC_TASK
    0x2a8, //SPKSTRUCT_OFFSET_PROC_CSFLAGS,
    0xA4, // SPKSTRUCT_OFFSET_PROC_CSB_PLATFORM_BINARY,
    0x248, //SPKSTRUCT_OFFSET_PROC_TEXT_VP,

    0x0,   // KSTRUCT_OFFSET_FILEDESC_FD_OFILES
    
    0x8,   // KSTRUCT_OFFSET_FILEPROC_F_FGLOB
    
    0x38,  // KSTRUCT_OFFSET_FILEGLOB_FG_DATA
    
    0x10,  // KSTRUCT_OFFSET_SOCKET_SO_PCB
    
    0x10,  // KSTRUCT_OFFSET_PIPE_BUFFER
    
    0x14,  // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_SIZE
    0x20,  // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE
    0x18, // KSTRUCT_SIZE_IPC_ENTRY
    0x8, // KSTRUCT_OFFSET_IPC_ENTRY_IE_BITS
    
    0xd8, // KSTRUCT_OFFSET_VNODE_V_MOUNT
    0x78, // KSTRUCT_OFFSET_VNODE_VU_SPECINFO
    0x0, // KSTRUCT_OFFSET_VNODE_V_LOCK
    0x70, //SPKSTRUCT_OFFSET_VNODE_V_TYPE
    0xe0, // KSTRUCT_OFFSET_VNODE_V_DATA
    0x54, // KSTRUCT_OFFSET_VNODE_V_FLAG
    
    0x10, // KSTRUCT_OFFSET_SPECINFO_SI_FLAGS
    
    0x70, // KSTRUCT_OFFSET_MOUNT_MNT_FLAG
    0x8f8, // KSTRUCT_OFFSET_MOUNT_MNT_DATA
    0x18, // KSTRUCT_OFFSET_MOUNT_MNT_MLOCK

    0x10, // KSTRUCT_OFFSET_HOST_SPECIAL
    0x7c,  // KFREE_ADDR_OFFSET

};
int kstruct_offsetsSP_13_0[] = {
    0xb,   // KSTRUCT_OFFSET_TASK_LCK_MTX_TYPE,
    0x10,  // KSTRUCT_OFFSET_TASK_REF_COUNT,
    0x14,  // KSTRUCT_OFFSET_TASK_ACTIVE,
    0x20,  // KSTRUCT_OFFSET_TASK_VM_MAP,               *
    0x28,  // KSTRUCT_OFFSET_TASK_NEXT,
    0x30,  // KSTRUCT_OFFSET_TASK_PREV,
    0xd8,  // KSTRUCT_OFFSET_TASK_ITK_SELF,
    0x300, // KSTRUCT_OFFSET_TASK_ITK_SPACE,
    0x358, // KSTRUCT_OFFSET_TASK_BSD_INFO,             *
    0x398, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_ADDR
    0x3a0, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_SIZE
    0x390, // SPKSTRUCT_OFFSET_TASK_TFLAGS
    0x2e8, // SPKSTRUCT_OFFSET_TASK_ITK_REGISTERED      *
    
    0x0,   // KSTRUCT_OFFSET_IPC_PORT_IO_BITS,
    0x4,   // KSTRUCT_OFFSET_IPC_PORT_IO_REFERENCES,
    0x40,  // KSTRUCT_OFFSET_IPC_PORT_IKMQ_BASE,
    0x50, // KSTRUCT_OFFSET_IPC_PORT_MSG_COUNT,
    0x60, // KSTRUCT_OFFSET_IPC_PORT_IP_RECEIVER,
    104, // KSTRUCT_OFFSET_IPC_PORT_IP_KOBJECT,
    0x88, // KSTRUCT_OFFSET_IPC_PORT_IP_PREMSG,
    0x90, // KSTRUCT_OFFSET_IPC_PORT_IP_CONTEXT,
    0xa0, // KSTRUCT_OFFSET_IPC_PORT_IP_SRIGHTS,
    
    0x60, // KSTRUCT_OFFSET_PROC_PID,                   *
    0xf8, // KSTRUCT_OFFSET_PROC_UCRED                  *
    0x8,  // KSTRUCT_OFFSET_PROC_P_LIST
    0x100,// KSTRUCT_OFFSET_PROC_P_FD
    0x10, // KSTRUCT_OFFSET_PROC_TASK                   *
    0x290, //SPKSTRUCT_OFFSET_PROC_CSFLAGS,
    0xA8, // SPKSTRUCT_OFFSET_PROC_CSB_PLATFORM_BINARY,
    0x238, //SPKSTRUCT_OFFSET_PROC_TEXT_VP,
    
    0x0,  // KSTRUCT_OFFSET_FILEDESC_FD_OFILES
    
    0x8,  // KSTRUCT_OFFSET_FILEPROC_F_FGLOB
    
    0x38, // KSTRUCT_OFFSET_FILEGLOB_FG_DATA
    
    0x10, // KSTRUCT_OFFSET_SOCKET_SO_PCB
    
    0x10, // KSTRUCT_OFFSET_PIPE_BUFFER
    
    0x14, // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_SIZE
    0x20, // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE
    0x18, // KSTRUCT_SIZE_IPC_ENTRY
    0x8, // KSTRUCT_OFFSET_IPC_ENTRY_IE_BITS
    
    0xd8, // KSTRUCT_OFFSET_VNODE_V_MOUNT vnodemount ldr        x0, [x0, #0xd8]
    0x78, // KSTRUCT_OFFSET_VNODE_VU_SPECINFO
    0x0,  // KSTRUCT_OFFSET_VNODE_V_LOCK
    0x70, //SPKSTRUCT_OFFSET_VNODE_V_TYPE
    0xe0, // KSTRUCT_OFFSET_VNODE_V_DATA
    0x54, // KSTRUCT_OFFSET_VNODE_V_FLAG
    
    0x10, // KSTRUCT_OFFSET_SPECINFO_SI_FLAGS
    
    0x70, // KSTRUCT_OFFSET_MOUNT_MNT_FLAG
    0x8f8, // KSTRUCT_OFFSET_MOUNT_MNT_DATA
    0x18, // KSTRUCT_OFFSET_MOUNT_MNT_MLOCK
    
    0x10, // KSTRUCT_OFFSET_HOST_SPECIAL
    
    0x7c, // KFREE_ADDR_OFFSET
};

int kstruct_offsetsSP_12_0[] = {
/*    0xb,   // KSTRUCT_OFFSET_TASK_LCK_MTX_TYPE,
    0x10,  // KSTRUCT_OFFSET_TASK_REF_COUNT,
    0x14,  // KSTRUCT_OFFSET_TASK_ACTIVE,
    0x20,  // KSTRUCT_OFFSET_TASK_VM_MAP,
    0x28,  // KSTRUCT_OFFSET_TASK_NEXT,
    0x30,  // KSTRUCT_OFFSET_TASK_PREV,
    0xd8,  // KSTRUCT_OFFSET_TASK_ITK_SELF,
    0x300, // KSTRUCT_OFFSET_TASK_ITK_SPACE,
    0x358, // KSTRUCT_OFFSET_TASK_BSD_INFO,
    
    0x0,   // KSTRUCT_OFFSET_IPC_PORT_IO_BITS,
    0x4,   // KSTRUCT_OFFSET_IPC_PORT_IO_REFERENCES,
    0x40,  // KSTRUCT_OFFSET_IPC_PORT_IKMQ_BASE,
    0x50,  // KSTRUCT_OFFSET_IPC_PORT_MSG_COUNT,
    0x60,  // KSTRUCT_OFFSET_IPC_PORT_IP_RECEIVER,
    0x68,  // KSTRUCT_OFFSET_IPC_PORT_IP_KOBJECT,
    0x88,  // KSTRUCT_OFFSET_IPC_PORT_IP_PREMSG,
    0x90,  // KSTRUCT_OFFSET_IPC_PORT_IP_CONTEXT,
    0xa0,  // KSTRUCT_OFFSET_IPC_PORT_IP_SRIGHTS,
    
    0x60,  // KSTRUCT_OFFSET_PROC_PID,
    0x100, // KSTRUCT_OFFSET_PROC_P_FD
    
    0x0,   // KSTRUCT_OFFSET_FILEDESC_FD_OFILES
    
    0x8,   // KSTRUCT_OFFSET_FILEPROC_F_FGLOB
    
    0x38,  // KSTRUCT_OFFSET_FILEGLOB_FG_DATA
    
    0x10,  // KSTRUCT_OFFSET_SOCKET_SO_PCB
    
    0x10,  // KSTRUCT_OFFSET_PIPE_BUFFER
    
    0x14,  // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_SIZE
    0x20,  // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE
    
    0x7c,  // KFREE_ADDR_OFFSET
 */
    0xb,   // KSTRUCT_OFFSET_TASK_LCK_MTX_TYPE,
    0x10,  // KSTRUCT_OFFSET_TASK_REF_COUNT,
    0x14,  // KSTRUCT_OFFSET_TASK_ACTIVE,
    0x20,  // KSTRUCT_OFFSET_TASK_VM_MAP,               *
    0x28,  // KSTRUCT_OFFSET_TASK_NEXT,
    0x30,  // KSTRUCT_OFFSET_TASK_PREV,
    0xd8,  // KSTRUCT_OFFSET_TASK_ITK_SELF,
    0x300, // KSTRUCT_OFFSET_TASK_ITK_SPACE,
    0x358, // KSTRUCT_OFFSET_TASK_BSD_INFO,             *
    0x398, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_ADDR
    0x3a0, // KSTRUCT_OFFSET_TASK_ALL_IMAGE_INFO_SIZE
    0x390, // SPKSTRUCT_OFFSET_TASK_TFLAGS
    0x2e8, // SPKSTRUCT_OFFSET_TASK_ITK_REGISTERED      *
    
    0x0,   // KSTRUCT_OFFSET_IPC_PORT_IO_BITS,
    0x4,   // KSTRUCT_OFFSET_IPC_PORT_IO_REFERENCES,
    0x40,  // KSTRUCT_OFFSET_IPC_PORT_IKMQ_BASE,
    0x50, // KSTRUCT_OFFSET_IPC_PORT_MSG_COUNT,
    0x60, // KSTRUCT_OFFSET_IPC_PORT_IP_RECEIVER,
    104, // KSTRUCT_OFFSET_IPC_PORT_IP_KOBJECT,
    0x88, // KSTRUCT_OFFSET_IPC_PORT_IP_PREMSG,
    0x90, // KSTRUCT_OFFSET_IPC_PORT_IP_CONTEXT,
    0xa0, // KSTRUCT_OFFSET_IPC_PORT_IP_SRIGHTS,
    
    0x60, // KSTRUCT_OFFSET_PROC_PID,                   *
    0xf8, // KSTRUCT_OFFSET_PROC_UCRED                  *
    0x8,  // KSTRUCT_OFFSET_PROC_P_LIST
    0x100,// KSTRUCT_OFFSET_PROC_P_FD
    0x10, // KSTRUCT_OFFSET_PROC_TASK                   *
    0x290, //SPKSTRUCT_OFFSET_PROC_CSFLAGS,
    0xA8, // SPKSTRUCT_OFFSET_PROC_CSB_PLATFORM_BINARY,
    0x230, //SPKSTRUCT_OFFSET_PROC_TEXT_VP,
    
    0x0,  // KSTRUCT_OFFSET_FILEDESC_FD_OFILES
    
    0x8,  // KSTRUCT_OFFSET_FILEPROC_F_FGLOB
    
    0x38, // KSTRUCT_OFFSET_FILEGLOB_FG_DATA
    
    0x10, // KSTRUCT_OFFSET_SOCKET_SO_PCB
    
    0x10, // KSTRUCT_OFFSET_PIPE_BUFFER
    
    0x14, // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_SIZE
    0x20, // KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE
    0x18, // KSTRUCT_SIZE_IPC_ENTRY
    0x8, // KSTRUCT_OFFSET_IPC_ENTRY_IE_BITS
    
    0xd8, // KSTRUCT_OFFSET_VNODE_V_MOUNT vnodemount ldr        x0, [x0, #0xd8]
    0x78, // KSTRUCT_OFFSET_VNODE_VU_SPECINFO
    0x0,  // KSTRUCT_OFFSET_VNODE_V_LOCK
    0x70, //SPKSTRUCT_OFFSET_VNODE_V_TYPE
    0xe0, // KSTRUCT_OFFSET_VNODE_V_DATA
    0x54, // KSTRUCT_OFFSET_VNODE_V_FLAG
    
    0x10, // KSTRUCT_OFFSET_SPECINFO_SI_FLAGS
    
    0x70, // KSTRUCT_OFFSET_MOUNT_MNT_FLAG
    0x8f8, // KSTRUCT_OFFSET_MOUNT_MNT_DATA
    0x18, // KSTRUCT_OFFSET_MOUNT_MNT_MLOCK
    
    0x10, // KSTRUCT_OFFSET_HOST_SPECIAL
    
    0x7c, // KFREE_ADDR_OFFSET
};

SPkoffset(enum kstruct_offsetSP offsetSP) {
    if (offsetsSP == NULL) {
        printf("need to call offsetsSP_init() prior to querying offsetsSP\n");
        return 0;
    }
    return offsetsSP[offsetSP];
}

uint32_t create_outsize;

void offsetsSPJ_init() {
    
    if (SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"13.3")) {
        printf("[i] offsetsSP selected for iOS 13.0 or above\n");
        offsetsSP = kstruct_offsetsSP_13_0;
        
#if __arm64e__
        offsetsSP[8] = 0x368;
#endif
        create_outsize = 0xdd0;
    }else if (SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"12.0")) {
        printf("[i] offsetsSP selected for iOS 12.0 or above\n");
        offsetsSP = kstruct_offsetsSP_12_0;
        
#if __arm64e__
        offsetsSP[8] = 0x368;
#endif
        create_outsize = 0xdd0;
    }
    
    else if (SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"11.3")) {
        printf("[i] offsetsSP selected for iOS 11.3 or above\n");
        offsetsSP = kstruct_offsetsSP_11_3;
        create_outsize = 0xbc8;
    } else if (SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"11.1")) {
        printf("[i] offsetsSP selected for iOS 11.1 or above\n");
        offsetsSP = kstruct_offsetsSP_11_3;
        create_outsize = 0xbc8;
    } else if (SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"11.0")) {
        printf("[i] offsetsSP selected for iOS 11.0 to 11.0.3\n");
        offsetsSP = kstruct_offsetsSP_11_0;
        create_outsize = 0x6c8;
    } else if (SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"10.0")) {
        printf("[i] offsetsSP selected for iOS 10.x\n");
        offsetsSP = kstruct_offsetsSP_10_x;
        create_outsize = 0x3c8;
    } else {
        printf("[-] iOS version too low, 10.0 required\n");
        exit(EXIT_FAILURE);
    }
}
